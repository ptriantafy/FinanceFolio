@startuml Class Diagram
skinparam classAttributeIconSize 0
' package Declarations
package com.financefolio.forum{ 
    class Forum {
     -forum: List<Question>
     -searchResult: List<Question>
     +sortByRating(): void
     +getQuestion(): Question
     +getQuestions(): void 
     +searchQuestion(): Question
     +addQuestion(): void
     +registerVoteOnQuestion(): void
    }

    class Question{
        -questionId: int
        -title: String
        -body: String
        -date: Date
        -authorId: int
        -upvotes: int
        -downvotes: int
        -rating: float
        -comments: List<Comment>
        +gettersAndSetters()
        +registerVoteOnComment(): void
        +addCommentToQuestion() : void
    }

    class Comment{
        -questionId: int
        -commentId: int
        -body: String
        -date: Date
        -authorId: int
        -upvotes: int
        -downvotes: int
        +gettersAndSetters()
    }
}

package com.financefolio.calendar{ 
    class Calendar{
        -calendar_id: int
        -reminderList: List<Reminder>
        +saveReminderToCalendar(): void
        +updateReminder(): void
        +deleteReminder(): void
    }

    class Reminder{
        -reminder_id: int
        -body: String
        -DaynotifyBefore: String
        -HourNotifyBefore: String
        -payment_frequency: String
        -frequency: int
        -date: String
    }
}

package com.financefolio.user{
    class User{
        -name: String
        -id: int
        -registerDate: Date
        --
        setters/getters
    }

    class UserInput{
        +handleMembershipChoice(): void
        +handlePersonalUse(): void
        +handleCollectiveUse(): void
    }


    class Expert{
        -averageRating: int
        -speacialty: String
    }

    class Member{
        -category: int
        -friends: FriendsList
        -houseArea: int
        -houseResidents: int
        -income: float
        -pointsRecord: PointsRecord
        -premiumMember: boolean
        -requestsList: FriendRequestsList
        -tokens: List<PremiumFeatureToken>
        +acceptFriendRequest(): void
        +adjustPoints(): void
        +buyToken(): void
        +declineFriendRequest(): void
        +giftTokenToFriend(): void
        +searchMember(): List<Member>
        +sendFriendRequest(): void
        --
        setters/getters
    }

    class Review{
        -body: String
        -author: String
        -date: Date
        -rating:int
    }
}

package com.financefolio.premiumfeatures{
    class PremiumFeature{
        -cost: int
        -description: String
        -id: int
        --
        setters/getters
    }

    class PremiumFeatureToken{
        -id: int
        -receivedOn: Date
        -tokenFor: PremiumFeature
        +fetchPremiumFeature(): void
        --
        setters/getters
    }
}
' premiumfeatures package relations
PremiumFeature --o PremiumFeatureToken
PremiumFeatureToken --o Member

package com.financefolio.points{ 
    class PointsRecord{
        -record: List<Points>
        +addToRecord(): void
        --
        setters/getters
    }
    class Points{
        -amount: int
        -id: int
        -reason: String
        -timestamp: Timestamp
        --
        setters/getters
    }
}
' points package relations
Points --* PointsRecord
Member *-- PointsRecord

package com.financefolio.social{ 
    package com.financefolio.social.chat{ 
        class Chat{
            -messages: List<Message>
            -chat_id: int
            +sendMessage(): void
            --
            setters/getters
        }

        class Message{
            -body: String
            -chat_id: int
            -id: int
            -receiver_id: int
            -sender_id: int
            -sentOn: Timestamp
            --
            setters/getters
        }
    }
    ' chat package relations
    Chat *-- Message
    Friend *-- Chat

    class FriendRequest{
        -receiverId: int
        -requestId: int
        -senderId: int
        -senderSharingLevel: int
        -sentOn: Timestamp
        --
        setters/getters
    }
    class FriendRequestsList{
        -requests: List<FriendRequest>
        +deleteRequest(): void
        --
        setters/getters
    }
    class FriendsList{
        -friendsList: List<Friends>
        +addFriend(): void
        +removeFriend():void
        --
        setters/getters
    }
    class Friend{
        -conversation: Chat
        -friendsSince: Date
        -id: int
        -name: String
        -sharingLevel: int
        --
        setters/getters
    }
}
'social  package relations
Friend --* FriendsList
FriendRequest --* FriendRequestsList
Member o--FriendRequestsList
Member o--FriendsList

package com.financefolio.diagrams{
    class DiagramsRecord{
        diagramsRecord: List<Diagram>
    }
    
    class Diagram{
        -category: String
        -timeInterval: Time
        -creationDate: Date
    }
}

package com.financefolio.expense{
    class Expense{
        ' -name: String'
        -category: String
        -name: String
        -description: String
        -id: int
        -amount: double
        -addition_date: Date
        --
        +init(): void
        setters/getters 
    }

    class Subscription{
        -next_billing_date: Date
        +getNextBillingDate(): Date
        +setNextBillingDate(): void
    }

    class Miscellaneous{
        -microExpenses: List<Expense>
        +updateSum(): void
        +appendEnMass(): void
        +appendMicroExpenses(): void
        +removeMicroExpenses(): void
        +getNumberOfMicroExpenses(): int
        +getMicroExpense(): Expense



    }

    
    class Bill{
        -type: String
        -owed: double
        -date_from: Date
        -date_to: Date
        --
        setters/getters
    }

    class ExpenseList{
        -number: int
        -expensesInList: List<Expense>
        +addExpensesInList(): void
        +updateInList(): void
        +getAllExpensesList(): List<Expense>
    }

    class ExpenseManagement{
        -expenseList: List<Expense>
        -printExpenseDetails(): void
        +printList(): void
        +manageExpensesScene(): void
        +
    }
}

package com.financefolio.goals{
    class Goal{
        -goalId: int
        -ownerId: int
        -name: String
        -state: String
        -shared: boolean
        -timeDuration:long
        -moneyToSpend: float
        -difficulty: int
        -reward: int
        +gettersAndSetters()
        +estimateDifficulty(): void
        +addGoal(): void
        +modifyGoal(): void
        +deleteGoal(): void       
    }

    class GoalsHistory{ 
        -goalHistory: List<Goal>
        +getGoal(): Goal
        +getGoals(): void
    }

    class Achievement{
        -achievementId: int
        -description: String
        -type: String
        -state: String
        -reward: int
        -timeToComplete: int
        +gettersAndSetters()

    }

    class AchievementList{ 
        -achList: List<Achievement>
        +getAchievements(): void
        +getAchievement(): void
    }
}

package com.financefolio.statistics
{
    class statistics
    {
        -totalExpenses: float
        -totalBillExpenses: float
        -pwrExpenses: float
        -wtrExpenses: float
        -telExpenses: float
        -totalSubscriptionExpenses: float
        -totalMiscExpenses: float
        +calcGlobalStats(): void
        +checkUserGlobalStanding(): void
        +calcUserGlobalStats(): void
    }
}

package com.financefolio.diagrams
{
    class diagram
    {
        -xAxis: List<float>
        -yAxis: List<float>
        setters/getters                                           
    }
    class diagramCalculation
    {
        -diagramList: List<diagram>
        +createDiagram: void

    }
}


' forum package relations
Forum *-- Question
Question *-- Comment

' calendar package relations
Calendar o-- Reminder
User o-- Calendar

' user package relations
User <|-- Member
User <|-- Expert
'User o-- UserInput
Expert o-- Review

'diagrams package relations 
DiagramsRecord *-- Diagram
Member o-- DiagramsRecord

'goals package relations
GoalsHistory --* Member
Goal --o GoalsHistory
Achievement --o AchievementList
Achievement --|> Goal

'expense package relations
Expense <|-- Miscellaneous
Expense <|-- Bill
Expense <|-- Subscription
ExpenseList *-- Expense
ExpenseManagement *-- Expense

newpage

package com.financefolio.dao{
    interface DAO{
        +get(): Optional <T>
        +getAll(): Optinal <List<T>> 
        +save(): void
        +update(): void
        +delete(): void
    }
    class MemberDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Member>
        +getAll(): Optinal <List<Member>> 
        +save(): void
        +update(): void
        +delete(): void
    }
    class MessageDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Message>
        +getAll(): Optinal <List<Message>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class FriendRequestDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <FriendRequest>
        +getAll(): Optinal <List<FriendRequest>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class FriendDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Friend>
        +getAll(): Optinal <List<Friend>> 
        +save(): void
        +update(): void
        +delete(): void
    }
    class QuestionDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Question>
        +getAll(): Optinal <List<Question>> 
        +save(): void
        +update(): void
        +delete(): void
    }
    
    class CommentDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Comment>
        +getAll(): Optinal <List<Comment>> 
        +save(): void
        +update(): void
        +delete(): void
    }
    
    class PointsDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <Points>
        +getAll(): Optinal <List<Points>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class PremiumFeatureTokenDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <PremiumFeatureToken>
        +getAll(): Optinal <List<PremiumFeatureToken>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class PremiumFeatureDAO{
        -db_url: String
        -password: String
        -usrname: String
        +connect(): Connection
        +get(): Optional <PremiumFeature>
        +getAll(): Optional <List<PremiumFeature>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class ExpenseDAO{
        -db_url: String 
        -username: String
        -password: String
        +connect(): Connection
        +get(): Optional<Expense>
        +getAll(): Optional<List<Expense>>
        +save():void
        +update(): void
        +delete(): void

    }

    class GoalDAO{
        -db_url: String
        -usrname: String
        -password: String
        +connect(): Connection
        +get(): Optional <Goal>
        +getAll(): Optinal <List<Goal>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class AchievementDAO{
        -db_url: String
        -usrname: String
        -password: String
        +connect(): Connection
        +get(): Optional <Achievement>
        +getAll(): Optinal <List<Achievement>> 
        +save(): void
        +update(): void
        +delete(): void
    }

    class ReminderDAO{} 
}
'dao package relations
DAO <|.. QuestionDAO
DAO <|.. CommentDAO
DAO <|.. ExpenseDAO
DAO <|.. AchievementDAO
DAO <|.. GoalDAO
DAO <|.. ReminderDAO
DAO <|.. MessageDAO
DAO <|.. MemberDAO
DAO <|.. FriendDAO
DAO <|.. FriendRequestDAO
DAO <|.. PointsDAO
DAO <|.. PremiumFeatureDAO
DAO <|.. PremiumFeatureTokenDAO
' notes
@enduml